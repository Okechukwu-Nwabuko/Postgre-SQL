--DATA VALIDATION & JOINS IN POSTGRE SQL:

--SELECT STATEMENT:
SELECT *
FROM CUSTOMERS;

SELECT EMP_NO, BIRTH_DATE, FIRST_NAME, LAST_NAME, GENDER, HIRE_DATE
FROM EMPLOYEES
ORDER BY EMP_NO;

SELECT EMP_NO, SALARY, FROM_DATE, TO_DATE
FROM SALARIES
ORDER BY SALARY DESC;

SELECT EMP_NO, DEPT_NO, FROM_DATE, TO_DATE
FROM DEPT_MANAGER
WHERE EMP_NO between 110085 AND 110800;

--DISTINCT FUNCTION:
SELECT DISTINCT(REGION) 
FROM CUSTOMERS;

SELECT DISTINCT(EMP_NO)
FROM DEPT_EMP;

--WHERE FUNCTION:
SELECT CUSTOMER_ID, CUSTOMER_NAME, SEGMENT, COUNTRY, STATE, CITY, REGION
FROM CUSTOMERS
WHERE REGION = 'South' AND STATE = 'Kentucky';

SELECT *
FROM SALES
WHERE SUB_CATEGORY = 'Chairs' AND ORDER_ID LIKE '%2016%';

SELECT ORDER_ID, ORDER_DATE, SHIP_DATE, CUSTOMER_ID, CATEGORY,QUANTITY, SALES, PROFIT
FROM SALES
WHERE SALES >= 500;

SELECT ORDER_ID, ORDER_DATE, SHIP_DATE, CUSTOMER_ID, CATEGORY,QUANTITY, SALES, PROFIT
FROM SALES
WHERE SALES <> 1500;

--AGGREGRATE FUNCTIONS [COUNT, SUM, MIN, MAX, AVERAGE]:

--COUNT FUNCTION:
SELECT COUNT(SALES) AS COUNT_OF_SALES, SALES
FROM SALES
GROUP BY SALES;

SELECT COUNT(EMP_NO) AS NO_OF_EMPLOYEES
FROM EMPLOYEES;

SELECT DISTINCT(COUNT(SALES)) AS SALES_COUNT
FROM SALES;

--SUM FUNCTION
SELECT ROUND(SUM(SALES),0) AS TOTAL_SALES
FROM SALES;

SELECT SUM(SALARY) AS TOTAL_SALARY
FROM SALARIES;

--MIN FUNCTION:
SELECT MIN(SALES) AS MINIMUM_SALES
FROM SALES;

SELECT MIN(AGE)
FROM CUSTOMERS;

--MAX FUNTION;
SELECT MAX(SALES) AS HIGHEST_SALES_VALUE
FROM SALES;

--AVERAGE FUNTION:
SELECT ROUND(AVG(SALES),0) AS AVERAGE_SALES
FROM SALES;

SELECT ROUND(AVG(AGE),2) AS AVERAGE_AGE
FROM CUSTOMERS;

--LIMIT FUNTION:
SELECT *
FROM CUSTOMERS
ORDER BY AGE ASC
LIMIT 20;

SELECT EMP_NO, BIRTH_DATE, FIRST_NAME, LAST_NAME, GENDER
FROM EMPLOYEES
ORDER BY EMP_NO ASC
LIMIT 50;

--AS FUNTION;
SELECT COUNT(SALES) AS SALES_COUNT
FROM SALES;

SELECT COUNT(EMP_NO) AS NO_OF_EMPLOYEES
FROM EMPLOYEES;

--ORDER BY FUNCTION:
SELECT ORDER_ID, ORDER_DATE, CUSTOMER_ID, CATEGORY, SALES
FROM SALES
ORDER BY SALES DESC
LIMIT 100;

SELECT *
FROM DEPARTMENTS
ORDER BY DEPT_NAME ASC;

--BETWEEN FUNCTION:
SELECT ORDER_LINE, ORDER_DATE, SHIP_DATE, SHIP_MODE, CUSTOMER_ID, PRODUCT_ID, SUB_CATEGORY, SALES, QUANTITY
FROM SALES
WHERE SALES BETWEEN 1000 AND 5000;

SELECT EMP_NO, FROM_DATE, TO_DATE, SALARY
FROM SALARIES
WHERE SALARY BETWEEN 40000 AND 90000;

--IN STATEMENT:
SELECT *
FROM SALES
WHERE SHIP_MODE IN('Standard Class' , 'First Class'); 

SELECT CUSTOMER_ID, CUSTOMER_NAME, SEGMENT, AGE, COUNTRY, STATE
FROM CUSTOMERS
WHERE STATE IN('Florida', 'Texas','New York')
ORDER BY STATE ASC;

--NOT IN STATEMENT:
SELECT *
FROM SALES
WHERE SHIP_MODE NOT IN('Standard Class', 'First Class'); 

SELECT CUSTOMER_ID, CUSTOMER_NAME, SEGMENT, AGE, COUNTRY, STATE
FROM CUSTOMERS
WHERE STATE NOT IN('Texas','New York')
ORDER BY STATE ASC;

--LIKE STATEMENT:
SELECT CUSTOMER_ID, CUSTOMER_NAME, AGE, COUNTRY, STATE, CITY
FROM CUSTOMERS
WHERE CUSTOMER_NAME LIKE 'C%';

SELECT EMP_NO, FIRST_NAME, LAST_NAME, GENDER, HIRE_DATE
FROM EMPLOYEES
WHERE LAST_NAME LIKE '%n%'
ORDER BY FIRST_NAME;

SELECT CUSTOMER_ID, CUSTOMER_NAME, SEGMENT, COUNTRY, STATE, CITY
FROM CUSTOMERS
WHERE  CUSTOMER_NAME LIKE '_o%'

--GROUP BY FUNTION:
SELECT CUSTOMER_ID, ROUND(SUM(SALES),0)
FROM SALES
GROUP BY CUSTOMER_ID;

SELECT CUSTOMER_ID, ROUND((SALES),0) AS SALES, QUANTITY, ROUND((PROFIT),0) AS PROFIT 
FROM SALES
GROUP BY CUSTOMER_ID, SALES, QUANTITY, ROUND((PROFIT),0);

--HAVING FUNCTION:
SELECT CUSTOMER_ID, ROUND((SALES),0) AS SALES
FROM SALES
GROUP BY CUSTOMER_ID, SALES
HAVING SALES > 500;

--JOINS [INNER, RIGHT, LEFT, FULL]:								 
--INNER JOIN:
--EXTRACT ALL MANAGER's EMPLOYEES NO, DEPARTMENT NO & DEPARTMENT NAME. ORDER BY MANAGER'S DEPARTMENT NO:
SELECT DM.EMP_NO, DM.DEPT_NO, D.DEPT_NAME
FROM DEPT_MANAGER AS DM INNER JOIN DEPARTMENTS AS D
ON DM.DEPT_NO = D.DEPT_NO
ORDER BY DEPT_NO;

SELECT DM.EMP_NO, DM.DEPT_NO, D.DEPT_NAME, DM.FROM_DATE, DM.TO_DATE
FROM DEPT_MANAGER AS DM INNER JOIN DEPARTMENTS AS D
ON DM.DEPT_NO = D.DEPT_NO
ORDER BY DEPT_NO;

--EXTRACT LIST OF ALL MANAGER'S EMPLOYEE NO, FIRST & LAST NAME, DEPT NO & HIRE DATE:
SELECT E.EMP_NO, E.FIRST_NAME, E.LAST_NAME, E.HIRE_DATE, DM.DEPT_NO
FROM EMPLOYEES AS E INNER JOIN DEPT_MANAGER AS DM
ON E.EMP_NO = DM.EMP_NO
ORDER BY EMP_NO;

--USING GROUP BY:
SELECT DM.EMP_NO, DM.DEPT_NO, D.DEPT_NAME
FROM DEPT_MANAGER AS DM INNER JOIN DEPARTMENTS AS D
ON DM.DEPT_NO = D.DEPT_NO
GROUP BY D.DEPT_NAME, DM.EMP_NO, DM.DEPT_NO
ORDER BY DEPT_NO;

-- LEFT JOIN:
--EXTRACT ALL MANAGER's EMPLOYEES NO, DEPARTMENT NO & DEPARTMENT NAME. ORDER BY MANAGER'S DEPARTMENT NO:
SELECT DM.EMP_NO, DM.DEPT_NO, D.DEPT_NAME
FROM DEPT_MANAGER_DUP AS DM LEFT JOIN DEPARTMENTS_DUP AS D
ON DM.DEPT_NO = D.DEPT_NO
ORDER BY DM.DEPT_NO;

SELECT DM.EMP_NO, DM.DEPT_NO, D.DEPT_NAME
FROM DEPARTMENTS_DUP AS D LEFT JOIN DEPT_MANAGER_DUP AS DM
ON DM.DEPT_NO = D.DEPT_NO
ORDER BY DM.DEPT_NO;

--LEFT OUTER JOIN:
SELECT DM.EMP_NO, DM.DEPT_NO, D.DEPT_NAME
FROM DEPARTMENTS_DUP AS D LEFT OUTER JOIN DEPT_MANAGER_DUP AS DM
ON DM.DEPT_NO = D.DEPT_NO
ORDER BY DM.DEPT_NO;

-- RIGHT JOIN:
--EXTRACT ALL MANAGER's EMPLOYEES NO, DEPARTMENT NO & DEPARTMENT NAME. ORDER BY MANAGER'S DEPARTMENT NO:
SELECT DM.EMP_NO, DM.DEPT_NO, D.DEPT_NAME
FROM DEPARTMENTS_DUP AS D RIGHT JOIN DEPT_MANAGER_DUP AS DM
ON DM.DEPT_NO = D.DEPT_NO
ORDER BY DM.DEPT_NO;

--RIGHT JOIN[ORDER BY DEPT-NO]:
SELECT DM.EMP_NO, DM.DEPT_NO, D.DEPT_NAME
FROM DEPARTMENTS_DUP AS D RIGHT JOIN DEPT_MANAGER_DUP AS DM
ON DM.DEPT_NO = D.DEPT_NO
ORDER BY D.DEPT_NO;

-- JOIN & WHERE Used TOGETHER:
--EXTRACT EMPLOYEE NO, FIRST_NAME, LAST_NAME & SALARY OF EMPLOYEES THAT EARN ABOVE 145000 PER YEAR:
SELECT E.EMP_NO, E.FIRST_NAME, E.LAST_NAME, S.SALARY
FROM EMPLOYEES AS E INNER JOIN SALARIES AS S
ON E.EMP_NO = S.EMP_NO
WHERE S.SALARY > 145000
ORDER BY E.EMP_NO;

--EXTRACT EMPLOYEE NO, FIRST_NAME, LAST_NAME & SALARY OF EMPLOYEES THAT EARN ABOVE 5000 PER YEAR:
SELECT E.FIRST_NAME, E.LAST_NAME, S.SALARY
FROM EMPLOYEES AS E LEFT JOIN SALARIES AS S
ON E.EMP_NO = S.EMP_NO
WHERE S.SALARY > 5000
ORDER BY E.FIRST_NAME;

-- SELECT FIRST & LAST NAME, HIRE_DATE & SALARY OF EMPLOYEES: 
--WHOSE FIRST_NAME IS 'Mario' & LAST_NAME IS 'Straney':
SELECT E.EMP_NO, E.FIRST_NAME, E.LAST_NAME, E.HIRE_DATE, S.SALARY
FROM EMPLOYEES AS E INNER JOIN SALARIES AS S
ON E.EMP_NO = S.EMP_NO
WHERE E.FIRST_NAME = 'Mario' AND E.LAST_NAME = 'Straney';

--JOIN EMPLOYEES & DEPT_MANAGER TABLES TO RETURN ALL EMPLOYEES WITH LAST_NAME 'Markovitch':
SELECT E.EMP_NO, DM.DEPT_NO,E.FIRST_NAME, E.LAST_NAME, E.GENDER, E.BIRTH_DATE, E.HIRE_DATE, DM.FROM_DATE, DM.TO_DATE
FROM EMPLOYEES AS E LEFT JOIN DEPT_MANAGER AS DM
ON E.EMP_NO = DM.EMP_NO
WHERE E.LAST_NAME = 'Markovitch'
ORDER BY E.EMP_NO;

--JOIN EMPLOYEES & DEPT_MANAGER TABLES TO RETURN ALL EMPLOYEES HIRED BEFORE 31st OF JANUARY, 1985:
SELECT E.EMP_NO, DM.DEPT_NO,E.FIRST_NAME, E.LAST_NAME, E.GENDER, E.BIRTH_DATE, E.HIRE_DATE, DM.FROM_DATE, DM.TO_DATE
FROM EMPLOYEES AS E LEFT JOIN DEPT_MANAGER AS DM
ON E.EMP_NO = DM.EMP_NO
WHERE E.HIRE_DATE < '1985-01-31'
ORDER BY E.EMP_NO;

--USING AGGREGATE FUNCTIONS WITH JOINS:
--AVERAGE FUNCTION:
SELECT ROUND(AVG(SALARY), 0) AS AVERAGE_SALARY,
CASE 
    WHEN
	     GENDER = 'M' THEN 'Male'
		 ELSE 'Female'
		 END
FROM EMPLOYEES AS E INNER JOIN SALARIES AS S
ON E.EMP_NO = S.EMP_NO
GROUP BY E.GENDER;

SELECT E.EMP_NO, E.GENDER,ROUND(AVG(S.SALARY),1) AS AVERAGE_SALARY
FROM EMPLOYEES AS E JOIN SALARIES AS S
ON E.EMP_NO = S.EMP_NO
GROUP BY E.EMP_NO, GENDER; 

--COUNT FUNCTION:
SELECT E.GENDER, COUNT(DM.EMP_NO) AS NO_OF_MANAGERS 
FROM EMPLOYEES AS E JOIN DEPT_MANAGER AS DM
ON E.EMP_NO = DM.EMP_NO
GROUP BY GENDER;

--COUNT OF ALL EMPLOYEES IN THE COMPANY:
SELECT COUNT(EMP_NO),
CASE
    WHEN GENDER = 'M' THEN 'Male'
	ELSE 'Female'
	END AS Gender	
FROM EMPLOYEES
GROUP BY GENDER;

--JOIN MULTIPLE TABLES IN SQL:

--EXTRACT A LIST OF ALL MANAGER'S FIRST_NAME, LAST_NAME, DEPT_NO, HIRE_DATE, TO-DATE& DEPARTMENT_NAME:
SELECT DM.EMP_NO, DM.DEPT_NO, DM.TO_DATE, E.FIRST_NAME, E.LAST_NAME,E.HIRE_DATE, D.DEPT_NAME
FROM DEPT_MANAGER AS DM JOIN EMPLOYEES AS E
ON DM.EMP_NO = E.EMP_NO
JOIN DEPARTMENTS AS D
ON D.DEPT_NO = D.DEPT_NO;

SELECT E.FIRST_NAME, E.LAST_NAME, DM.DEPT_NO, E.HIRE_DATE, DM.TO_DATE, D.DEPT_NAME
FROM DEPARTMENTS AS D JOIN DEPT_MANAGER AS DM 
ON D.DEPT_NO = DM.DEPT_NO
JOIN EMPLOYEES AS E 
ON DM.EMP_NO = E.EMP_NO;

--RETRIEVE AVERAGE SALARY FOR ALL DEPARTMENTS:
SELECT D.DEPT_NO, D.DEPT_NAME, ROUND(AVG(S.SALARY),0) AS AVG_SALARY
FROM DEPARTMENTS AS D JOIN DEPT_EMP AS DE
ON D.DEPT_NO = DE.DEPT_NO
JOIN SALARIES  AS S
ON S.EMP_NO = DE.EMP_NO
GROUP BY D.DEPT_NO, D.DEPT_NAME
ORDER BY D.DEPT_NO ASC;

--RETRIEVE AVERAGE SALARY FOR ALL DEPARTMENTS WHERE AVERAGE-SALARY >60000:
SELECT D.DEPT_NO, D.DEPT_NAME, ROUND(AVG(S.SALARY),2) AS AVG_SALARY
FROM DEPARTMENTS AS D JOIN DEPT_EMP AS DE
ON D.DEPT_NO = DE.DEPT_NO
JOIN SALARIES AS S
ON S.EMP_NO = DE.EMP_NO
GROUP BY D.DEPT_NO, D.DEPT_NAME
HAVING ROUND(AVG(S.SALARY),2) >60000
ORDER BY ROUND(AVG(S.SALARY),2) DESC;


